// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  username    String
  telegram_id String  @unique
  active      Boolean @default(true)
  role        Role    @default(USER)
  branchId    String? @db.ObjectId
  branch      Branch? @relation(fields: [branchId], references: [id])
  orders      order[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Branch {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String   @unique
  address    String
  users      User[]
  orders     order[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model product {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String          @unique
  price         Float
  description   String?
  image         String?
  orderProducts orderProducts[]
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
}

model orderProducts {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  product_id String   @db.ObjectId
  order_id   String   @db.ObjectId
  count      Float
  order      order    @relation(fields: [order_id], references: [id])
  product    product  @relation(fields: [product_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model order {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  user          User            @relation(fields: [userId], references: [id])
  userId        String          @db.ObjectId
  branch        Branch          @relation(fields: [branchId], references: [id])
  branchId      String          @db.ObjectId
  orderProducts orderProducts[]
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
}

model admin {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  username   String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
